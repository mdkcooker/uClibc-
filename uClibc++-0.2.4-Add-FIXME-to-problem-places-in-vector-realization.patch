--- uClibc++-0.2.4/include/vector.vector_realiz~	2014-03-24 21:07:47.830245905 +0100
+++ uClibc++-0.2.4/include/vector	2014-03-24 21:08:30.492145213 +0100
@@ -70,6 +70,7 @@ namespace std{
 			data(0), data_size(0), elements(0), a(al)
 		{
 			data_size = n + __UCLIBCXX_STL_BUFFER_SIZE__;
+            // FIXME This is not exception safe
 			data = a.allocate(data_size);
 
 			resize(n, value);
@@ -101,6 +102,7 @@ namespace std{
  
 			elements  = x.size();
 			data_size = elements + __UCLIBCXX_STL_BUFFER_SIZE__;
+            // FIXME This is not exception safe
 			data = a.allocate(data_size);
 			size_type i = 0;
 			for( auto xx : x )
@@ -280,6 +282,7 @@ namespace std{
 		template <class InputIterator> _UCXXEXPORT
 			void _insert_from_iterator(iterator position, InputIterator first, InputIterator last)
 		{
+            // FIXME This is O(n*n)
 			T temp;
 			while(first !=last){
 				temp = *first;
@@ -333,23 +336,13 @@ namespace std{
 			if(this == &v){		//Avoid dv.swap(v)
 				return;
 			}
-			T* ptr;
-			size_type temp;
 
 			//Swap pointers first
-			ptr = data;
-			data = v.data;
-			v.data  = ptr;
-
+            std::swap(data, v.data);
 			//Swap element counts
-			temp = elements;
-			elements = v.elements;
-			v.elements = temp;
-
+            std::swap(elements, v.elements);
 			//Swap data size
-			temp = data_size;
-			data_size = v.data_size;
-			v.data_size = temp;
+            std::swap(data_size, v.data_size);
 		}
 
 		_UCXXEXPORT void clear(){
