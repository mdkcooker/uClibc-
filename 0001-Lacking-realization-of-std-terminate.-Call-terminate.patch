From 5ed51752b55652c9638d56731c08ac1390c9ff18 Mon Sep 17 00:00:00 2001
From: Alexey Guseynov <kibergus@gmail.com>
Date: Sun, 12 Aug 2012 17:48:40 +0400
Subject: [PATCH] Lacking realization of std::terminate. Call terminate in case
 if exception can't be thrown.

---
 src/func_exception.cpp | 16 ++++++++--------
 src/terminate.cpp      | 42 ++++++++++++++++++++++++++++++++++++++++++
 src/unexpected.cpp     | 37 +++++++++++++++++++++++++++++++++++++
 3 files changed, 87 insertions(+), 8 deletions(-)
 create mode 100644 src/terminate.cpp
 create mode 100644 src/unexpected.cpp

diff --git a/src/func_exception.cpp b/src/func_exception.cpp
index fab095f..e8701f0 100644
--- a/src/func_exception.cpp
+++ b/src/func_exception.cpp
@@ -61,23 +61,23 @@ _UCXXEXPORT void __throw_invalid_argument(const char * message){
 #else
 
 _UCXXEXPORT void __throw_bad_alloc(){
-	abort();
+	std::terminate();
 }
 
-_UCXXEXPORT void __throw_out_of_range( const char * ){
-	abort();
+_UCXXEXPORT void __throw_out_of_range( const char *){
+	std::terminate();
 }
 
-_UCXXEXPORT void __throw_overflow_error( const char * ){
-	abort();
+_UCXXEXPORT void __throw_overflow_error( const char *){
+	std::terminate();
 }
 
-_UCXXEXPORT void __throw_length_error(const char * ){
-	abort();
+_UCXXEXPORT void __throw_length_error(const char *){
+	std::terminate();
 }
 
 _UCXXEXPORT void __throw_invalid_argument(const char *){
-	abort();
+	std::terminate();
 }
 
 #endif
--- uClibc++-0.2.4/include/exception.terminate~	2014-12-11 21:07:06.498507938 +0100
+++ uClibc++-0.2.4/include/exception	2014-12-11 21:07:22.542075327 +0100
@@ -81,7 +81,7 @@ namespace std
   terminate_handler set_terminate(terminate_handler) throw();
   /** The runtime will call this function if %exception handling must be
    *  abandoned for any reason.  */
-  void terminate() __UCLIBCXX_NORETURN;
+  void terminate() throw() __UCLIBCXX_NORETURN;
 
   /// Takes a new handler function as an argument, returns the old function.
   unexpected_handler set_unexpected(unexpected_handler) throw();
